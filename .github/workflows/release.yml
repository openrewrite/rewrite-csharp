---
name: publish

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+

env:
  GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
  GRADLE_SWITCHES: --console=plain --info --stacktrace --warning-mode=all --no-daemon
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.gradle_enterprise_access_key }}
  ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ossrh_username }}
  ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ossrh_token }}
  ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ossrh_signing_key }}
  ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ossrh_signing_password }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: set-up-jdk
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      - name: set-up-gradle
        uses: gradle/actions/setup-gradle@v4

      - name: publish-candidate
        if: contains(github.ref, '-rc.')
        run: |
          ./gradlew \
          ${{ env.GRADLE_SWITCHES }} \
          -Preleasing \
          -Prelease.disableGitChecks=true \
          -Prelease.useLastTag=true \
          candidate \
          publish \
          closeAndReleaseSonatypeStagingRepository

      - name: publish-release
        if: (!contains(github.ref, '-rc.'))
        run: |
          ./gradlew \
          ${{ env.GRADLE_SWITCHES }} \
          -Preleasing \
          -Prelease.disableGitChecks=true \
          -Prelease.useLastTag=true \
          final \
          publish \
          closeAndReleaseSonatypeStagingRepository
