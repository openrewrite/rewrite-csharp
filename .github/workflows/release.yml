---
name: publish

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+

env:
  GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
  GRADLE_SWITCHES: --console=plain --info --stacktrace --warning-mode=all --no-daemon
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.gradle_enterprise_access_key }}
  ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ossrh_username }}
  ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ossrh_token }}
  ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ossrh_signing_key }}
  ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ossrh_signing_password }}
  RELEASE_BUILD: "true"
  RELEASE_PUBLICATION: "true"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: set-up-jdk
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: set-up-gradle
        uses: gradle/actions/setup-gradle@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: build
        run: |
          (cd Rewrite && dotnet publish Rewrite.sln)

      - name: publish-candidate
        if: contains(github.ref, '-rc.')
        run: |
          ./gradlew \
          ${{ env.GRADLE_SWITCHES }} \
          -Preleasing \
          -Prelease.disableGitChecks=true \
          -Prelease.useLastTag=true \
          candidate \
          publish \
          closeAndReleaseSonatypeStagingRepository

      - name: publish-java-release
        if: (!contains(github.ref, '-rc.'))
        run: |
          ./gradlew \
          ${{ env.GRADLE_SWITCHES }} \
          -Preleasing \
          -Prelease.disableGitChecks=true \
          -Prelease.useLastTag=true \
          final \
          publish \
          closeAndReleaseSonatypeStagingRepository --info

      - name: Update Directory.Build.props version from tag
        working-directory: Rewrite
        run: |
          sed -i -E "s/<VersionPrefix>.*<\/VersionPrefix>/<VersionPrefix>${GITHUB_REF#refs/tags/v}<\/VersionPrefix>/g" Directory.Build.props

      - name: publish-dotnet-release
        if: (!contains(github.ref, '-rc.'))
        run: |
          cd Rewrite
          mkdir ~/localNugetFeed
          dotnet pack --output ~/localNuGetFeed Rewrite.sln
          dotnet nuget push ~/localNuGetFeed/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{env.NUGET_API_KEY}}
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
  
      - name: Commit version updates
        working-directory: Rewrite
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add Directory.Build.props
          git commit -m "bump version ${GITHUB_REF#refs/tags/}"
          git push https://${GH_TOKEN}@github.com/openrewrite/rewrite-csharp.git HEAD:main
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
